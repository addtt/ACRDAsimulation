[General]
network = Acrda
sim-time-limit = 50s
#debug-on-errors = true
#record-eventlog = true

Acrda.arrivalType = "POISSON"#"HEAVY_TRAFFIC"   # POISSON, HEAVY_TRAFFIC, EXTERNAL
Acrda.numHosts = 10
Acrda.nRep = 3
Acrda.nSlots = 4
Acrda.tFrame = 1	# For each host, the frame time is actually multiplied by the spreading factor.
Acrda.server.numIterIC = 12

Acrda.host[*].defaultSpreadingFactor = 4
Acrda.server.maxSpreadingFactor = 4
# The max spreading factor should be the max SF of all the hosts. It is used to scale the
# receive window, since the frame length at each hosts is proportional to its SF.

# Window-related quantities are normalized to the maximum frame length among all hosts.
# With spreading factor 1, the frame lengths are 1 and the window measures are as declared
# below. Otherwise, consider the following quantities as normalized to the maximum SF.
Acrda.server.wndLength = 1.5  # times the frame size, which is maxSpreadingFactor seconds
Acrda.server.wndShift = 0.5   # times the frame size, which is maxSpreadingFactor seconds


Acrda.host[*].radioDelay = 10ms
Acrda.host[*].meanInterarr = 2.5s	# avg ia Time
Acrda.host[*].randExpUnity = exponential(1s)  # exponential generator with mean 1

Acrda.server.sinrThresh_dB = -3
#Acrda.host[*].randSnrDistrib = exponential(1)
Acrda.host[*].randSnrDistrib = sqrt(gamma_d(3, 1/3)) / 0.95937	# Nakagami(3, 1) divided by its average
Acrda.host[*].randSnrDistribStr = "Nakagami(3,1) with avg 1"
# m = 3, Omega = 1
# Nakagami(m, Omega) is obtained by Gamma(k, theta) with:
#   k = m
#   theta = Omega / m
# and finally take the sqrt.

Acrda.host[*].defaultAvgSnrLinear = 10  # 10dB
